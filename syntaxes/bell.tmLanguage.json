{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "bell",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#literals"
		},
		{
			"include": "#ticks"
		},
		{
			"include": "#functions"
		},
		{
			"include": "#variables"
		},
		{
			"include": "#numeric"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.line",
					"match": "##.*"
				},
				{
					"name": "comment.block",
					"begin": "#\\(",
					"end": "\\)#"
				},
				{
					"name": "comment",
					"match": ";"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword",
					"match": "\\b(?<!\\$|#)(for|in|do|collect|if|while|then|else|init|keep|unkeep|with|as)\\b"
				},
				{
					"name": "keyword.operator",
					"match": "<\\.\\.\\.>|-\\^"
				},
				{
					"name": "support.type.property-name",
					"match": "(?<!\\w+)(?<!@)@[a-zA-Z]\\w*(?=\\s)"
				}
			]
		},
		"strings": {
			"name": "string",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape",
					"match": "\\\\."
				}
			]
		},
		"literals": {
			"name": "string.quoted.single",
			"begin": "'",
			"end": "'",
			"patterns": [
				{
					"name": "constant.character.escape",
					"match": "\\\\."
				}
			]
		},
		"variables": {
			"patterns": [
				{
					"name": "support.constant",
					"match": "(?<=include\\().*(?=\\))"
				},
				{
					"name": "keyword.operator",
					"match": "(\\.(=|\\.\\.)?|->|\\!?_=|:(:|=)?|:\\*)"
				},
				{
					"name": "keyword.operator",
					"match": "(?<!#)(\\!|~|u-|-|\\*{1,2}|/{1,2}|&{1,3}|\\^{1,2}|\\+|(<|>){1,2}|\\|{1,3}|=)=?"
				},
				{
					"name": "constant.other",
					"match": "\\b(null|nil)\\b"
				},
				{
					"name": "support.constant",
					"match": "\\$(d?o|l|i|f|p|r|l|x)\\d+"
				},
				{
					"name": "support.constant",
					"match": "(?<!\\$)\\b[A-Z][A-Z_]*?\\b"
				},
				{
					"name": "variable.parameter",
					"match": "(?<![a-zA-Z$])(\\$|#)(?!(\\$|#))(?=\\w+)\\b"
				}
			]
		},
		"ticks": {
			"patterns": [
				{
					"name": "string.quoted.other",
					"match": "`\\S+"
				}
			]
		},
		"functions": {
			"patterns": [
				{
					"match": "#(\\+|-|~|u-|\\*|/{1,2}|%|==|!=?|<=|>=|<{1,2}|>{1,2}|&{1,3}|(\\^){1,2}|(\\|){1,3})",
					"name": "support.function"
				},
				{
					"name": "support.function",
					"match": "\\w+\\("
				},
				{
					"name": "support.function",
					"match": "(?<!=[^=]*)(\\w+)(?=\\s*=\\s*(\\$\\w\\s*(=\\s*[^=]+),?)*[^->]*->)"
				}
			]
		},
		"numeric": {
			"patterns": [
				{
					"name": "support.function",
					"match": "(?<=\\{)\\s*\\w+(\\.\\w+)?\\b(?=([^}]*\\}))"
				},
				{
					"name": "support.function",
					"match": "\\$?[A-Za-z]\\w*(?=\\s*=\\s*\\{\\s*\\S)"
				},
				{
					"name": "constant.numeric",
					"match": "\\bpi\\b"
				},
				{
					"name": "constant.numeric",
					"match": "(?<![A-Za-z_])[+\\-]?(\\d+(\\.(?!\\.\\.))\\d*|\\d*\\.\\d+|\\d+)([eE][+\\-]?\\d+)?"
				}
			]
		}
	},
	"scopeName": "source.bell"
}