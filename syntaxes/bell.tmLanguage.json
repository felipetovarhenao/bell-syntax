{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "bell",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#literals"
		},
		{
			"include": "#ticks"
		},
		{
			"include": "#functions"
		},
		{
			"include": "#variables"
		},
		{
			"include": "#numeric"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.line.number-sign.bell",
					"match": "##.*"
				},
				{
					"name": "comment.block.bell",
					"begin": "#\\(",
					"end": "\\)#"
				},
				{
					"name": "comment.bell",
					"match": ";"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.bell",
					"match": "\\b(for|in|do|collect|if|while|then|else|init|keep|unkeep|with|as)\\b"
				},
				{
					"match": "<\\.\\.\\.>|-\\^",
					"name": "keyword.other.bell"
				},
				{
					"name": "support.type.bell",
					"match": "(?<!\\w+)(?<!@)@[a-zA-Z]+(?=\\s)"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.bell",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.bell",
					"match": "\\\\."
				}
			]
		},
		"literals": {
			"name": "string.quoted.single.bell",
			"begin": "'",
			"end": "'",
			"patterns": [
				{
					"name": "constant.character.escape.bell",
					"match": "\\\\."
				}
			]
		},
		"variables": {
			"patterns": [
				{
					"name": "support.constant.bell",
					"match": "(?<=include\\().*(?=\\))"
				},
				{
					"name": "keyword.operator.bell",
					"match": "\\+=|-=|->|\\+|-|\\*=|\\*|\\*\\*=|\\*\\*|/=|/|//=|//|%=|%|=|==|!|~|!=|<|>|<=|>=|&=|&|\\^=|\\^|\\|=|\\||&&=|&&|&&&=|&&&|\\^\\^=|\\^\\^|\\|\\|=|\\|\\||\\|\\|\\|=|\\|\\|\\|<<=|<<|>>=|>>|:=|::|:|\\.=|_=|!_=|\\.\\.\\.|:\\*|\\.(?!\\.)"
				},
				{
					"name": "constant.other.bell",
					"match": "\\b(null|nil)"
				},
				{
					"name": "support.constant.bell",
					"match": "\\$d?o(\\d)"
				},
				{
					"name": "support.constant.bell",
					"match": "(?<!\\$)\\b[A-Z_]+\\b"
				},
				{
					"name": "variable.parameter.bell",
					"match": "(?<![a-zA-Z$])(\\$|#)(?!(\\$|#))(?=\\w+)\\b"
				}
			]
		},
		"ticks": {
			"patterns": [
				{
					"name": "string.quoted.other",
					"match": "`\\w+"
				}
			]
		},
		"functions": {
			"patterns": [
				{
					"match": "#\\+|#-|#u-|#\\*|#/|#//|#%|#==|#!=|#<|#>|#<=|#>=|#&|#\\^|#\\||#&&|#\\^\\^|#\\|\\||#&&&|#\\|\\|\\||#<<|#>>",
					"name": "entity.name.function.bell"
				},
				{
					"name": "entity.name.function.bell",
					"begins": "\\w+\\(",
					"ends": "\\)"
				},
				{
					"name": "entity.name.function.bell",
					"match": "\\w+\\("
				},
				{
					"name": "entity.name.function.bell",
					"match": "\\w+(?=(\\s*=\\s*\\([^;]*->))"
				}
			]
		},
		"numeric": {
			"patterns": [
				{
					"name": "entity.name.function.bell",
					"match": "\\{\\w+(\\.\\w+)?\\}"
				},
				{
					"name": "constant.numeric.bell",
					"match": "\\bpi\\b"
				},
				{
					"name": "constant.numeric.bell",
					"match": "\\b\\d+\\.\\d+"
				},
				{
					"name": "constant.numeric.bell",
					"match": "\\b\\.\\d+"
				},
				{
					"name": "constant.numeric.bell",
					"match": "\\b\\d+(\\.[^\\.])?"
				}
			]
		}
	},
	"scopeName": "source.bell"
}