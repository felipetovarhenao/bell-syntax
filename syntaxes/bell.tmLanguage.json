{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "bell",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#literals"
		},
		{
			"include": "#ticks"
		},
		{
			"include": "#functions"
		},
		{
			"include": "#variables"
		},
		{
			"include": "#numeric"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.line.number-sign.bell",
					"match": "##.*"
				},
				{
					"name": "comment.block.bell",
					"begin": "#\\(",
					"end": "\\)#"
				},
				{
					"name": "comment.bell",
					"match": ";"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.bell",
					"match": "\\b(if|while|for|do|collect|in|then|else)\\b"
				},
				{
					"name": "keyword.operator.bell",
					"match": "->"
				},
				{
					"name": "support.type.bell",
					"match": "@\\w+\\b"
				},
				{
					"name": "support.function.bell",
					"match": "\\$?\\w+\\("
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.bell",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.bell",
					"match": "\\\\."
				}
			]
		},
		"literals": {
			"name": "string.quoted.single.bell",
			"begin": "'",
			"end": "'",
			"patterns": [
				{
					"name": "constant.character.escape.bell",
					"match": "\\\\."
				}
			]
		},
		"variables": {
			"patterns": [
				{
					"name": "storage.type.variable.bell",
					"match": "\\b\\$(\\w)+"
				},
				{
					"name": "keyword.operator.bell",
					"match": "(\\+|\\-[^>]|%|\\*|/|(_|\\!)?\\=|\\|\\|\\|?|&&|\\.\\.\\.|\\:|\\<|\\>)"
				},
				{
					"name": "constant.other.bell",
					"match": "null"
				},
				{
					"name": "support.constant.bell",
					"match": "\\$do(\\d)"
				},
				{
					"name": "support.constant.bell",
					"match": "(?<!\\$)\\b[A-Z_]+\\b"
				},
				{
					"name": "variable.parameter.bell",
					"match": "\\$"
				}
			]
		},
		"ticks": {
			"patterns": [
				{
					"name": "string.quoted.other",
					"match": "`\\w+"
				}
			]
		},
		"functions": {
			"patterns": [
				{
					"name": "entity.name.function.bell",
					"begins": "\\w+\\(",
					"ends": "\\)"
				}
			]
		},
		"numeric": {
			"patterns": [
				{
					"name": "constant.numeric.bell",
					"match": "\\b\\d+"
				}
			]
		}
	},
	"scopeName": "source.bell"
}